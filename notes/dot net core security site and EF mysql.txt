
  this is the start
  
  >>> http://jasonwatmore.com/post/2018/06/26/aspnet-core-21-simple-api-for-authentication-registration-and-user-management
  but this all runs in a memory db
  
to talk to the server this angular UI is needed https://github.com/cornflourblue/aspnet-core-registration-login-api
make sure you uncomment the "fake db" to make it talk to the server  

next is to actually use a MySQL database. I need the following package


  https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql
  
  
  
  the package needs to be added in the WebApi.csproj 
  
  
  <Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="6.0.2" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="2.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    >>>>>  <PackageReference Include="Pomelo.EntityFrameworkCore.MySql" Version="2.1.2" />  <<<<<
  </ItemGroup>
</Project>
  
  
  
  
  in the startup.cs I added the following
  
  using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Microsoft.EntityFrameworkCore;
using WebApi.Helpers;
using WebApi.Services;
using AutoMapper;
using Microsoft.IdentityModel.Tokens;
using System.Text;
using Microsoft.AspNetCore.Authentication.JwtBearer;
using Microsoft.Extensions.Options;
using Pomelo.EntityFrameworkCore.MySql;
using Pomelo.EntityFrameworkCore.MySql.Infrastructure;
using System;
  
     public void ConfigureServices(IServiceCollection services)
        {
            services.AddCors();
			
			.....
  
       services.AddDbContextPool<DataContext>(
                    options => options.UseMySql("Server=192.168.1.8; Database=security; User=user; Password=password1!;",
                        mysqlOptions =>
                        {
                            mysqlOptions.MaxBatchSize(1);
                            mysqlOptions.ServerVersion(new Version(8,0,13), ServerType.MySql);
                            mysqlOptions.EnableRetryOnFailure(3, TimeSpan.FromSeconds(1), null);
                        }
                ));

  
  
  
  I tried the scafolding instruction in the https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql first
  but all it did it created a DBContext - I am not even sure is the correct one as I am using the AddDbContextPool above
  
  
  https://docs.microsoft.com/en-us/ef/core/get-started/aspnetcore/new-db?tabs=netcore-cli

  // Scafold the database to actually create it
  dotnet ef migrations add InitialCreate
  dotnet ef database update
  
  NOTE: in the link above there is a  <<<Scaffold a controller and views for the Blog entity.>>> might help to prototype
  
  
  
  output
--------------------------------------------------------------------------------------------------------------------------------  
  $ dotnet ef migrations add InitialCreate
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'DataContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: MaxPoolSize=128 MaxBatchSize=1 ServerVersion 8.0.13 MySql
Done. To undo this action, use 'ef migrations remove'

Dan@VR MINGW64 /e/Experiments/aspnet-core-registration-login-api (master)
$ dotnet ef database update
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'DataContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: MaxPoolSize=128 MaxBatchSize=1 ServerVersion 8.0.13 MySql
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='security' AND TABLE_NAME='__EFMigrationsHistory';
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (174ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE `__EFMigrationsHistory` (
          `MigrationId` varchar(95) NOT NULL,
          `ProductVersion` varchar(32) NOT NULL,
          CONSTRAINT `PK___EFMigrationsHistory` PRIMARY KEY (`MigrationId`)
      );
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='security' AND TABLE_NAME='__EFMigrationsHistory';
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      SELECT `MigrationId`, `ProductVersion`
      FROM `__EFMigrationsHistory`
      ORDER BY `MigrationId`;
info: Microsoft.EntityFrameworkCore.Migrations[20402]
      Applying migration '20181107064346_InitialCreate'.
Applying migration '20181107064346_InitialCreate'.
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (69ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      CREATE TABLE `Users` (
          `Id` int NOT NULL AUTO_INCREMENT,
          `FirstName` longtext NULL,
          `LastName` longtext NULL,
          `Username` longtext NULL,
          `PasswordHash` longblob NULL,
          `PasswordSalt` longblob NULL,
          CONSTRAINT `PK_Users` PRIMARY KEY (`Id`)
      );
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
      INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
      VALUES ('20181107064346_InitialCreate', '2.1.4-rtm-31024');
Done.
  
  
-------------------------------------------------------------------------------------------------------------------------------  
  
  